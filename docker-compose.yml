version: '3.8'

services:
  telegram-app-db:
    restart: always
    container_name: telegram-app-db
    image: postgres:13.4-alpine
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: authusr
      POSTGRES_PASSWORD: auth123
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: telegram-app
      WAIT_FOR_DB: 'true'
    ports:
      - 5432:${DB_PORT:-5432}
    networks:
      - app-net

  telegram-app:
    restart: unless-stopped
    container_name: telegram-app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${ENV:-development}
    depends_on:
      - "telegram-app-db" # condition: service_healthy
    ports:
      - '1488:${SERVER_PORT:-1488}'
    networks:
      - app-net

  pgadmin:
    restart: unless-stopped
    container_name: telegram-app-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - app-net

  redis:
    restart: unless-stopped
    container_name: telegram-app-redis
    image: redis:6.2-alpine
    ports:
      - ${REDIS_PORT:-6379}:6379
    command: [ "redis-server", "--appendonly", "no", "--save", "" ]
    networks:
      - postgres
      - app-net

  bullboard:
    restart: unless-stopped
    container_name: telegram-app-bullboard
    image: deadly0/bull-board
    ports:
      - ${BULL_BOARD_PORT:-6380}:3000
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
    networks:
      - app-net

networks:
  app-net:
    name: app-net

volumes:
  pg-data: #driver: local
  pgadmin:
